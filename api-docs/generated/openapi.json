{
  "openapi": "3.1.0",
  "info": {
    "title": "SPAR Self Service API",
    "description": "\n    SPAR Self Service API\n    ***********************************\n    Further details goes here\n    ***********************************\n    ",
    "contact": {
      "url": "https://www.openg2p.org/",
      "email": "info@openg2p.org"
    },
    "license": {
      "name": "Mozilla Public License 2.0",
      "url": "https://www.mozilla.org/en-US/MPL/2.0/"
    },
    "version": "1.0.0"
  },
  "paths": {
    "/dfsp/getLevels": {
      "post": {
        "tags": [
          "dfsp"
        ],
        "summary": "Get Dfsp Level",
        "operationId": "get_dfsp_level_dfsp_getLevels_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DfspLevelRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DfspLevelResponse-Input"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JwtBearerAuth": []
          }
        ]
      }
    },
    "/dfsp/getLevelValues": {
      "post": {
        "tags": [
          "dfsp"
        ],
        "summary": "Get Dfsp Level Values",
        "operationId": "get_dfsp_level_values_dfsp_getLevelValues_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DfspLevelValueRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DfspLevelValueResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JwtBearerAuth": []
          }
        ]
      }
    },
    "/test_strategy": {
      "post": {
        "tags": [
          "selfservice"
        ],
        "summary": "Test Strategy",
        "operationId": "test_strategy_test_strategy_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SelfServiceLinkRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestStrategyResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JwtBearerAuth": []
          }
        ]
      }
    },
    "/link": {
      "post": {
        "tags": [
          "selfservice"
        ],
        "summary": "Link",
        "operationId": "link_link_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SelfServiceLinkRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelfServiceLinkResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JwtBearerAuth": []
          }
        ]
      }
    },
    "/update": {
      "post": {
        "tags": [
          "selfservice"
        ],
        "summary": "Update",
        "operationId": "update_update_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SelfServiceUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelfServiceUpdateResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JwtBearerAuth": []
          }
        ]
      }
    },
    "/resolve": {
      "post": {
        "tags": [
          "selfservice"
        ],
        "summary": "Resolve",
        "operationId": "resolve_resolve_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelfServiceResolveResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "JwtBearerAuth": []
          }
        ]
      }
    },
    "/unlink": {
      "post": {
        "tags": [
          "selfservice"
        ],
        "summary": "Unlink",
        "operationId": "unlink_unlink_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelfServiceUnlinkResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "JwtBearerAuth": []
          }
        ]
      }
    },
    "/auth/profile": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Get Profile",
        "description": "Get Profile Data of the authenticated user/entity.\nThis can also be used to check whether or not the Authentication is present and valid.\n- Authentication required.\n- If online is true, the server will try to userinfo from original Authorization Server.\n  Else it will return the information present in ID Token and Access token.",
        "operationId": "get_profile_auth_profile_get",
        "security": [
          {
            "JwtBearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "online",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Online"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicProfile"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Logout",
        "description": "Perform Logout. This clears the Access Tokens and ID Tokens from cookies.\n- Authentication not mandatory.",
        "operationId": "logout_auth_logout_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/getLoginProviders": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Get Login Providers",
        "description": "Get available Login Providers List. Can also be used to display login providers on UI.\nUse getLoginProviderRedirect API to redirect to this Login Provider to perform login.",
        "operationId": "get_login_providers_auth_getLoginProviders_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginProviderHttpResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/getLoginProviderRedirect/{id}": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Get Login Provider Redirect",
        "description": "Redirect URL to redirect to the Login Provider's Authorization URL\nbased on the id of login provider given.",
        "operationId": "get_login_provider_redirect_auth_getLoginProviderRedirect__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          },
          {
            "name": "redirect_uri",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "/",
              "title": "Redirect Uri"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/oauth2/callback": {
      "get": {
        "tags": [
          "oauth"
        ],
        "summary": "Oauth Callback",
        "description": "Oauth2 Redirect Url. Auth Server will redirect to this URL after the Authentication is successful.\n\nInternal Errors:\n- Code: G2P-AUT-401. HTTP: 401. Message: Login Provider Id not received.",
        "operationId": "oauth_callback_oauth2_callback_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ping": {
      "get": {
        "tags": [
          "ping"
        ],
        "summary": "Get Ping",
        "description": "Returns \"pong\" always, if the service is healthy.\nThis can also used for service health checks.",
        "operationId": "get_ping_ping_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorListResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BankAccountFa": {
        "properties": {
          "strategy_id": {
            "type": "integer",
            "title": "Strategy Id"
          },
          "fa_type": {
            "$ref": "#/components/schemas/FaTypeEnum"
          },
          "bank_name": {
            "type": "string",
            "title": "Bank Name"
          },
          "bank_code": {
            "type": "string",
            "title": "Bank Code"
          },
          "branch_name": {
            "type": "string",
            "title": "Branch Name"
          },
          "branch_code": {
            "type": "string",
            "title": "Branch Code"
          },
          "account_number": {
            "type": "string",
            "title": "Account Number"
          }
        },
        "type": "object",
        "required": [
          "strategy_id",
          "fa_type",
          "bank_name",
          "bank_code",
          "branch_name",
          "branch_code",
          "account_number"
        ],
        "title": "BankAccountFa"
      },
      "BasicProfile": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "sub": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sub"
          },
          "iss": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Iss"
          },
          "exp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exp"
          },
          "picture": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Picture"
          },
          "profile": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "gender": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gender"
          },
          "birthdate": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birthdate"
          },
          "address": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "title": "BasicProfile"
      },
      "DfspLevelRequest": {
        "properties": {
          "request_header": {
            "$ref": "#/components/schemas/RequestHeader"
          },
          "request_pagination": {
            "$ref": "#/components/schemas/RequestPagination"
          },
          "request_payload": {
            "$ref": "#/components/schemas/DfspLevelRequestPayload"
          }
        },
        "type": "object",
        "required": [
          "request_header",
          "request_pagination",
          "request_payload"
        ],
        "title": "DfspLevelRequest"
      },
      "DfspLevelRequestPayload": {
        "properties": {
          "parent": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent"
          }
        },
        "type": "object",
        "required": [
          "parent"
        ],
        "title": "DfspLevelRequestPayload"
      },
      "DfspLevelResponse-Input": {
        "properties": {
          "response_header": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResponseHeader"
              },
              {
                "type": "null"
              }
            ]
          },
          "response_status": {
            "$ref": "#/components/schemas/ResponseStatus"
          },
          "response_error_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Error Code"
          },
          "response_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Message"
          },
          "response_pagination": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResponsePagination"
              },
              {
                "type": "null"
              }
            ],
            "default": {}
          },
          "response_payload": {
            "items": {
              "$ref": "#/components/schemas/DfspLevelSchema"
            },
            "type": "array",
            "title": "Response Payload"
          }
        },
        "type": "object",
        "required": [
          "response_status",
          "response_payload"
        ],
        "title": "DfspLevelResponse"
      },
      "DfspLevelResponse-Output": {
        "properties": {
          "response_header": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResponseHeader"
              },
              {
                "type": "null"
              }
            ]
          },
          "response_status": {
            "$ref": "#/components/schemas/ResponseStatus"
          },
          "response_error_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Error Code"
          },
          "response_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Message"
          },
          "response_pagination": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResponsePagination"
              },
              {
                "type": "null"
              }
            ],
            "default": {}
          },
          "response_payload": {
            "items": {
              "$ref": "#/components/schemas/DfspLevelSchema"
            },
            "type": "array",
            "title": "Response Payload"
          }
        },
        "type": "object",
        "required": [
          "response_status",
          "response_payload"
        ],
        "title": "DfspLevelResponse"
      },
      "DfspLevelSchema": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "level_type": {
            "$ref": "#/components/schemas/LevelTypeEnum"
          },
          "input_type": {
            "$ref": "#/components/schemas/InputTypeEnum"
          },
          "parent": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent"
          },
          "validation_regex": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validation Regex"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "level_type"
        ],
        "title": "DfspLevelSchema"
      },
      "DfspLevelValueRequest": {
        "properties": {
          "request_header": {
            "$ref": "#/components/schemas/RequestHeader"
          },
          "request_pagination": {
            "$ref": "#/components/schemas/RequestPagination"
          },
          "request_payload": {
            "$ref": "#/components/schemas/DfspLevelValueRequestPayload"
          }
        },
        "type": "object",
        "required": [
          "request_header",
          "request_pagination",
          "request_payload"
        ],
        "title": "DfspLevelValueRequest"
      },
      "DfspLevelValueRequestPayload": {
        "properties": {
          "level_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Level Id"
          },
          "parent": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent"
          }
        },
        "type": "object",
        "required": [
          "level_id",
          "parent"
        ],
        "title": "DfspLevelValueRequestPayload"
      },
      "DfspLevelValueResponse": {
        "properties": {
          "response_header": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResponseHeader"
              },
              {
                "type": "null"
              }
            ]
          },
          "response_status": {
            "$ref": "#/components/schemas/ResponseStatus"
          },
          "response_error_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Error Code"
          },
          "response_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Message"
          },
          "response_pagination": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResponsePagination"
              },
              {
                "type": "null"
              }
            ],
            "default": {}
          },
          "response_payload": {
            "items": {
              "$ref": "#/components/schemas/DfspLevelValueSchema"
            },
            "type": "array",
            "title": "Response Payload"
          }
        },
        "type": "object",
        "required": [
          "response_status",
          "response_payload"
        ],
        "title": "DfspLevelValueResponse"
      },
      "DfspLevelValueSchema": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "code": {
            "type": "string",
            "title": "Code"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "parent": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent"
          },
          "level_id": {
            "type": "integer",
            "title": "Level Id"
          },
          "strategy_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Strategy Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "code",
          "description",
          "parent",
          "level_id",
          "strategy_id"
        ],
        "title": "DfspLevelValueSchema"
      },
      "EmailWalletFa": {
        "properties": {
          "strategy_id": {
            "type": "integer",
            "title": "Strategy Id"
          },
          "fa_type": {
            "$ref": "#/components/schemas/FaTypeEnum"
          },
          "wallet_provider_name": {
            "type": "string",
            "title": "Wallet Provider Name"
          },
          "wallet_provider_code": {
            "type": "string",
            "title": "Wallet Provider Code"
          },
          "email_address": {
            "type": "string",
            "title": "Email Address"
          }
        },
        "type": "object",
        "required": [
          "strategy_id",
          "fa_type",
          "wallet_provider_name",
          "wallet_provider_code",
          "email_address"
        ],
        "title": "EmailWalletFa"
      },
      "ErrorListResponse": {
        "properties": {
          "errors": {
            "items": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "type": "array",
            "title": "Errors"
          }
        },
        "type": "object",
        "required": [
          "errors"
        ],
        "title": "ErrorListResponse"
      },
      "ErrorResponse": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code",
            "default": ""
          },
          "message": {
            "type": "string",
            "title": "Message",
            "default": ""
          }
        },
        "type": "object",
        "title": "ErrorResponse"
      },
      "FaTypeEnum": {
        "type": "string",
        "enum": [
          "BANK_ACCOUNT",
          "MOBILE_WALLET",
          "EMAIL_WALLET"
        ],
        "title": "FaTypeEnum"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "InputTypeEnum": {
        "type": "string",
        "enum": [
          "input",
          "select"
        ],
        "title": "InputTypeEnum"
      },
      "LevelTypeEnum": {
        "type": "string",
        "enum": [
          "bank",
          "branch",
          "account",
          "mobile_wallet_provider",
          "mobile_number",
          "email_wallet_provider",
          "email_address"
        ],
        "title": "LevelTypeEnum"
      },
      "LoginProviderHttpResponse": {
        "properties": {
          "loginProviders": {
            "items": {
              "$ref": "#/components/schemas/LoginProviderResponse"
            },
            "type": "array",
            "title": "Loginproviders"
          }
        },
        "type": "object",
        "required": [
          "loginProviders"
        ],
        "title": "LoginProviderHttpResponse"
      },
      "LoginProviderResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "$ref": "#/components/schemas/LoginProviderTypes"
          },
          "displayName": {
            "type": "string",
            "title": "Displayname"
          },
          "displayIconUrl": {
            "type": "string",
            "title": "Displayiconurl"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "type",
          "displayName",
          "displayIconUrl"
        ],
        "title": "LoginProviderResponse"
      },
      "LoginProviderTypes": {
        "type": "string",
        "enum": [
          "oauth2_auth_code"
        ],
        "title": "LoginProviderTypes"
      },
      "MobileWalletFa": {
        "properties": {
          "strategy_id": {
            "type": "integer",
            "title": "Strategy Id"
          },
          "fa_type": {
            "$ref": "#/components/schemas/FaTypeEnum"
          },
          "wallet_provider_name": {
            "type": "string",
            "title": "Wallet Provider Name"
          },
          "wallet_provider_code": {
            "type": "string",
            "title": "Wallet Provider Code"
          },
          "mobile_number": {
            "type": "string",
            "title": "Mobile Number"
          }
        },
        "type": "object",
        "required": [
          "strategy_id",
          "fa_type",
          "wallet_provider_name",
          "wallet_provider_code",
          "mobile_number"
        ],
        "title": "MobileWalletFa"
      },
      "RequestHeader": {
        "properties": {},
        "type": "object",
        "title": "RequestHeader"
      },
      "RequestPagination": {
        "properties": {
          "request_page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Page"
          },
          "page_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Page Size"
          }
        },
        "type": "object",
        "required": [
          "request_page",
          "page_size"
        ],
        "title": "RequestPagination"
      },
      "ResponseHeader": {
        "properties": {},
        "type": "object",
        "title": "ResponseHeader"
      },
      "ResponsePagination": {
        "properties": {
          "current_page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Page"
          },
          "page_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Page Size"
          },
          "total_elements": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Elements"
          }
        },
        "type": "object",
        "title": "ResponsePagination"
      },
      "ResponseStatus": {
        "type": "string",
        "enum": [
          "success",
          "failure"
        ],
        "title": "ResponseStatus"
      },
      "SelfServiceLinkRequest": {
        "properties": {
          "request_header": {
            "$ref": "#/components/schemas/RequestHeader"
          },
          "request_pagination": {
            "$ref": "#/components/schemas/RequestPagination"
          },
          "request_payload": {
            "$ref": "#/components/schemas/SelfServiceLinkRequestPayload"
          }
        },
        "type": "object",
        "required": [
          "request_header",
          "request_pagination",
          "request_payload"
        ],
        "title": "SelfServiceLinkRequest"
      },
      "SelfServiceLinkRequestPayload": {
        "properties": {
          "fa": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BankAccountFa"
              },
              {
                "$ref": "#/components/schemas/MobileWalletFa"
              },
              {
                "$ref": "#/components/schemas/EmailWalletFa"
              }
            ],
            "title": "Fa"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "phone_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Number"
          },
          "additional_info": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional Info"
          }
        },
        "type": "object",
        "required": [
          "fa"
        ],
        "title": "SelfServiceLinkRequestPayload"
      },
      "SelfServiceLinkResponse": {
        "properties": {
          "response_header": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResponseHeader"
              },
              {
                "type": "null"
              }
            ]
          },
          "response_status": {
            "$ref": "#/components/schemas/ResponseStatus"
          },
          "response_error_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Error Code"
          },
          "response_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Message"
          },
          "response_pagination": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResponsePagination"
              },
              {
                "type": "null"
              }
            ],
            "default": {}
          },
          "response_payload": {
            "$ref": "#/components/schemas/SelfServiceLinkResponsePayload"
          }
        },
        "type": "object",
        "required": [
          "response_status",
          "response_payload"
        ],
        "title": "SelfServiceLinkResponse"
      },
      "SelfServiceLinkResponsePayload": {
        "properties": {},
        "type": "object",
        "title": "SelfServiceLinkResponsePayload"
      },
      "SelfServiceResolveResponse": {
        "properties": {
          "response_header": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResponseHeader"
              },
              {
                "type": "null"
              }
            ]
          },
          "response_status": {
            "$ref": "#/components/schemas/ResponseStatus"
          },
          "response_error_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Error Code"
          },
          "response_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Message"
          },
          "response_pagination": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResponsePagination"
              },
              {
                "type": "null"
              }
            ],
            "default": {}
          },
          "response_payload": {
            "$ref": "#/components/schemas/SelfServiceResolveResponsePayload"
          }
        },
        "type": "object",
        "required": [
          "response_status",
          "response_payload"
        ],
        "title": "SelfServiceResolveResponse"
      },
      "SelfServiceResolveResponsePayload": {
        "properties": {
          "fa": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fa"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "phone_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Number"
          },
          "additional_info": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional Info"
          }
        },
        "type": "object",
        "title": "SelfServiceResolveResponsePayload"
      },
      "SelfServiceUnlinkResponse": {
        "properties": {
          "response_header": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResponseHeader"
              },
              {
                "type": "null"
              }
            ]
          },
          "response_status": {
            "$ref": "#/components/schemas/ResponseStatus"
          },
          "response_error_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Error Code"
          },
          "response_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Message"
          },
          "response_pagination": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResponsePagination"
              },
              {
                "type": "null"
              }
            ],
            "default": {}
          },
          "response_payload": {
            "$ref": "#/components/schemas/SelfServiceUnlinkResponsePayload"
          }
        },
        "type": "object",
        "required": [
          "response_status",
          "response_payload"
        ],
        "title": "SelfServiceUnlinkResponse"
      },
      "SelfServiceUnlinkResponsePayload": {
        "properties": {},
        "type": "object",
        "title": "SelfServiceUnlinkResponsePayload"
      },
      "SelfServiceUpdateRequest": {
        "properties": {
          "request_header": {
            "$ref": "#/components/schemas/RequestHeader"
          },
          "request_pagination": {
            "$ref": "#/components/schemas/RequestPagination"
          },
          "request_payload": {
            "$ref": "#/components/schemas/SelfServiceUpdateRequestPayload"
          }
        },
        "type": "object",
        "required": [
          "request_header",
          "request_pagination",
          "request_payload"
        ],
        "title": "SelfServiceUpdateRequest"
      },
      "SelfServiceUpdateRequestPayload": {
        "properties": {
          "fa": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BankAccountFa"
              },
              {
                "$ref": "#/components/schemas/MobileWalletFa"
              },
              {
                "$ref": "#/components/schemas/EmailWalletFa"
              }
            ],
            "title": "Fa"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "phone_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Number"
          },
          "additional_info": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional Info"
          }
        },
        "type": "object",
        "required": [
          "fa"
        ],
        "title": "SelfServiceUpdateRequestPayload"
      },
      "SelfServiceUpdateResponse": {
        "properties": {
          "response_header": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResponseHeader"
              },
              {
                "type": "null"
              }
            ]
          },
          "response_status": {
            "$ref": "#/components/schemas/ResponseStatus"
          },
          "response_error_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Error Code"
          },
          "response_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Message"
          },
          "response_pagination": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResponsePagination"
              },
              {
                "type": "null"
              }
            ],
            "default": {}
          },
          "response_payload": {
            "$ref": "#/components/schemas/SelfServiceUpdateResponsePayload"
          }
        },
        "type": "object",
        "required": [
          "response_status",
          "response_payload"
        ],
        "title": "SelfServiceUpdateResponse"
      },
      "SelfServiceUpdateResponsePayload": {
        "properties": {},
        "type": "object",
        "title": "SelfServiceUpdateResponsePayload"
      },
      "TestStrategyResponse": {
        "properties": {
          "constructed_id": {
            "type": "string",
            "title": "Constructed Id"
          },
          "constructed_fa": {
            "type": "string",
            "title": "Constructed Fa"
          }
        },
        "type": "object",
        "required": [
          "constructed_id",
          "constructed_fa"
        ],
        "title": "TestStrategyResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "JwtBearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
